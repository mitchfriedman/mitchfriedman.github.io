<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>server on Mitchell Friedman</title>
    <link>/tags/server/</link>
    <description>Recent content in server on Mitchell Friedman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 May 2019 16:20:00 +0100</lastBuildDate>
    
	<atom:link href="/tags/server/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JSON Schema</title>
      <link>/blog/json-schema/</link>
      <pubDate>Sun, 19 May 2019 16:20:00 +0100</pubDate>
      
      <guid>/blog/json-schema/</guid>
      <description>JSON Schema + Go + APIs API Validation After working on a few Go HTTP servers (particularly JSON) i&amp;rsquo;ve noticed a few different patterns for validating API bodies.
JSON is an unstructured language that is commonly used for micro-services to communicate with each other. One of the big advantages to using something like JSON is that either the server or the client the transport data without any prior syncronization. On the other hand, one of the big pitfalls to using something like JSON is that either the server or the client can change the transport data without any prior syncronization.</description>
    </item>
    
  </channel>
</rss>